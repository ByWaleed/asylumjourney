security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_SONATA_ADMIN, ROLE_EDITOR]
        ROLE_EDITOR:
            - ROLE_USER
            - ROLE_ADMIN_SERVICE_EDIT
            - ROLE_ADMIN_SERVICE_LIST
            - ROLE_ADMIN_SERVICE_CREATE
            - ROLE_ADMIN_SERVICE_VIEW
            - ROLE_ADMIN_SERVICE_VIEW
            - ROLE_ADMIN_SERVICE_DELETE
            - ROLE_ADMIN_PROVIDER_EDIT
            - ROLE_ADMIN_PROVIDER_LIST
            - ROLE_ADMIN_PROVIDER_CREATE
            - ROLE_ADMIN_PROVIDER_VIEW
            - ROLE_ADMIN_PROVIDER_VIEW
            - ROLE_ADMIN_PROVIDER_DELETE

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        # Disabling the security for the web debug toolbar, the profiler and Assetic.
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # -> custom firewall for the admin area of the URL
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
            anonymous:          true

        # -> end custom configuration

        refresh:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            form_login:
                provider:                 fos_userbundle
                check_path:               /api/login_check
                username_parameter: username
                password_parameter: password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        api:
            pattern:   .*
            stateless: true
            anonymous: true
            lexik_jwt: ~



    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be accessed without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_EDITOR, ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/api/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/providers, role: [ROLE_EDITOR, ROLE_ADMIN, ROLE_SONATA_ADMIN], methods: [POST, PUT, DELETE] }
        - { path: ^/services, role: [ROLE_EDITOR, ROLE_ADMIN, ROLE_SONATA_ADMIN], methods: [POST, PUT, DELETE] }
    acl:
        connection: default